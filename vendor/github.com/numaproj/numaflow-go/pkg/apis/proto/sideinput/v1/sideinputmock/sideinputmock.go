// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/numaproj/numaflow-go/pkg/apis/proto/sideinput/v1 (interfaces: SideInputClient)

// Package sideinputmock is a generated GoMock package.
package sideinputmock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/numaproj/numaflow-go/pkg/apis/proto/sideinput/v1"
	grpc "google.golang.org/grpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockSideInputClient is a mock of SideInputClient interface.
type MockSideInputClient struct {
	ctrl     *gomock.Controller
	recorder *MockSideInputClientMockRecorder
}

// MockSideInputClientMockRecorder is the mock recorder for MockSideInputClient.
type MockSideInputClientMockRecorder struct {
	mock *MockSideInputClient
}

// NewMockSideInputClient creates a new mock instance.
func NewMockSideInputClient(ctrl *gomock.Controller) *MockSideInputClient {
	mock := &MockSideInputClient{ctrl: ctrl}
	mock.recorder = &MockSideInputClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSideInputClient) EXPECT() *MockSideInputClientMockRecorder {
	return m.recorder
}

// IsReady mocks base method.
func (m *MockSideInputClient) IsReady(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*v1.ReadyResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "IsReady", varargs...)
	ret0, _ := ret[0].(*v1.ReadyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsReady indicates an expected call of IsReady.
func (mr *MockSideInputClientMockRecorder) IsReady(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsReady", reflect.TypeOf((*MockSideInputClient)(nil).IsReady), varargs...)
}

// RetrieveSideInput mocks base method.
func (m *MockSideInputClient) RetrieveSideInput(arg0 context.Context, arg1 *emptypb.Empty, arg2 ...grpc.CallOption) (*v1.SideInputResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RetrieveSideInput", varargs...)
	ret0, _ := ret[0].(*v1.SideInputResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveSideInput indicates an expected call of RetrieveSideInput.
func (mr *MockSideInputClientMockRecorder) RetrieveSideInput(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveSideInput", reflect.TypeOf((*MockSideInputClient)(nil).RetrieveSideInput), varargs...)
}
