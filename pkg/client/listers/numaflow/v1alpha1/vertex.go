/*
Copyright 2022 The Numaproj Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/numaproj/numaflow/pkg/apis/numaflow/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// VertexLister helps list Vertices.
// All objects returned here must be treated as read-only.
type VertexLister interface {
	// List lists all Vertices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Vertex, err error)
	// Vertices returns an object that can list and get Vertices.
	Vertices(namespace string) VertexNamespaceLister
	VertexListerExpansion
}

// vertexLister implements the VertexLister interface.
type vertexLister struct {
	listers.ResourceIndexer[*v1alpha1.Vertex]
}

// NewVertexLister returns a new VertexLister.
func NewVertexLister(indexer cache.Indexer) VertexLister {
	return &vertexLister{listers.New[*v1alpha1.Vertex](indexer, v1alpha1.Resource("vertex"))}
}

// Vertices returns an object that can list and get Vertices.
func (s *vertexLister) Vertices(namespace string) VertexNamespaceLister {
	return vertexNamespaceLister{listers.NewNamespaced[*v1alpha1.Vertex](s.ResourceIndexer, namespace)}
}

// VertexNamespaceLister helps list and get Vertices.
// All objects returned here must be treated as read-only.
type VertexNamespaceLister interface {
	// List lists all Vertices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Vertex, err error)
	// Get retrieves the Vertex from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Vertex, error)
	VertexNamespaceListerExpansion
}

// vertexNamespaceLister implements the VertexNamespaceLister
// interface.
type vertexNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Vertex]
}
