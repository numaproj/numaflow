/*
Copyright 2022 The Numaproj Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/numaproj/numaflow/pkg/apis/numaflow/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// MonoVertexLister helps list MonoVertices.
// All objects returned here must be treated as read-only.
type MonoVertexLister interface {
	// List lists all MonoVertices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MonoVertex, err error)
	// MonoVertices returns an object that can list and get MonoVertices.
	MonoVertices(namespace string) MonoVertexNamespaceLister
	MonoVertexListerExpansion
}

// monoVertexLister implements the MonoVertexLister interface.
type monoVertexLister struct {
	listers.ResourceIndexer[*v1alpha1.MonoVertex]
}

// NewMonoVertexLister returns a new MonoVertexLister.
func NewMonoVertexLister(indexer cache.Indexer) MonoVertexLister {
	return &monoVertexLister{listers.New[*v1alpha1.MonoVertex](indexer, v1alpha1.Resource("monovertex"))}
}

// MonoVertices returns an object that can list and get MonoVertices.
func (s *monoVertexLister) MonoVertices(namespace string) MonoVertexNamespaceLister {
	return monoVertexNamespaceLister{listers.NewNamespaced[*v1alpha1.MonoVertex](s.ResourceIndexer, namespace)}
}

// MonoVertexNamespaceLister helps list and get MonoVertices.
// All objects returned here must be treated as read-only.
type MonoVertexNamespaceLister interface {
	// List lists all MonoVertices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.MonoVertex, err error)
	// Get retrieves the MonoVertex from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.MonoVertex, error)
	MonoVertexNamespaceListerExpansion
}

// monoVertexNamespaceLister implements the MonoVertexNamespaceLister
// interface.
type monoVertexNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.MonoVertex]
}
