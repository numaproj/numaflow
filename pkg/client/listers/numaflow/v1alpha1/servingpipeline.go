/*
Copyright 2022 The Numaproj Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/numaproj/numaflow/pkg/apis/numaflow/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ServingPipelineLister helps list ServingPipelines.
// All objects returned here must be treated as read-only.
type ServingPipelineLister interface {
	// List lists all ServingPipelines in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServingPipeline, err error)
	// ServingPipelines returns an object that can list and get ServingPipelines.
	ServingPipelines(namespace string) ServingPipelineNamespaceLister
	ServingPipelineListerExpansion
}

// servingPipelineLister implements the ServingPipelineLister interface.
type servingPipelineLister struct {
	listers.ResourceIndexer[*v1alpha1.ServingPipeline]
}

// NewServingPipelineLister returns a new ServingPipelineLister.
func NewServingPipelineLister(indexer cache.Indexer) ServingPipelineLister {
	return &servingPipelineLister{listers.New[*v1alpha1.ServingPipeline](indexer, v1alpha1.Resource("servingpipeline"))}
}

// ServingPipelines returns an object that can list and get ServingPipelines.
func (s *servingPipelineLister) ServingPipelines(namespace string) ServingPipelineNamespaceLister {
	return servingPipelineNamespaceLister{listers.NewNamespaced[*v1alpha1.ServingPipeline](s.ResourceIndexer, namespace)}
}

// ServingPipelineNamespaceLister helps list and get ServingPipelines.
// All objects returned here must be treated as read-only.
type ServingPipelineNamespaceLister interface {
	// List lists all ServingPipelines in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServingPipeline, err error)
	// Get retrieves the ServingPipeline from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServingPipeline, error)
	ServingPipelineNamespaceListerExpansion
}

// servingPipelineNamespaceLister implements the ServingPipelineNamespaceLister
// interface.
type servingPipelineNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.ServingPipeline]
}
