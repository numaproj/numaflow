//
//Copyright 2022 The Numaproj Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: pkg/apis/proto/daemon/daemon.proto

package daemon

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BufferInfo is used to provide information about the buffer including
// pending messages count, if it has unprocessed data etc which helps in pipeline/buffer deletion etc
type BufferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline        string                 `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	BufferName      string                 `protobuf:"bytes,2,opt,name=bufferName,proto3" json:"bufferName,omitempty"`
	PendingCount    *wrapperspb.Int64Value `protobuf:"bytes,3,opt,name=pendingCount,proto3" json:"pendingCount,omitempty"`
	AckPendingCount *wrapperspb.Int64Value `protobuf:"bytes,4,opt,name=ackPendingCount,proto3" json:"ackPendingCount,omitempty"`
	// Total messages existing in the buffer, including pending, ackPending and acked.
	// Using Int64Value to solve the problem of int64 in proto3 being serialized to string when converting to JSON.
	TotalMessages    *wrapperspb.Int64Value  `protobuf:"bytes,5,opt,name=totalMessages,proto3" json:"totalMessages,omitempty"`
	BufferLength     *wrapperspb.Int64Value  `protobuf:"bytes,6,opt,name=bufferLength,proto3" json:"bufferLength,omitempty"`
	BufferUsageLimit *wrapperspb.DoubleValue `protobuf:"bytes,7,opt,name=bufferUsageLimit,proto3" json:"bufferUsageLimit,omitempty"`
	BufferUsage      *wrapperspb.DoubleValue `protobuf:"bytes,8,opt,name=bufferUsage,proto3" json:"bufferUsage,omitempty"`
	IsFull           *wrapperspb.BoolValue   `protobuf:"bytes,9,opt,name=isFull,proto3" json:"isFull,omitempty"`
}

func (x *BufferInfo) Reset() {
	*x = BufferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferInfo) ProtoMessage() {}

func (x *BufferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferInfo.ProtoReflect.Descriptor instead.
func (*BufferInfo) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{0}
}

func (x *BufferInfo) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *BufferInfo) GetBufferName() string {
	if x != nil {
		return x.BufferName
	}
	return ""
}

func (x *BufferInfo) GetPendingCount() *wrapperspb.Int64Value {
	if x != nil {
		return x.PendingCount
	}
	return nil
}

func (x *BufferInfo) GetAckPendingCount() *wrapperspb.Int64Value {
	if x != nil {
		return x.AckPendingCount
	}
	return nil
}

func (x *BufferInfo) GetTotalMessages() *wrapperspb.Int64Value {
	if x != nil {
		return x.TotalMessages
	}
	return nil
}

func (x *BufferInfo) GetBufferLength() *wrapperspb.Int64Value {
	if x != nil {
		return x.BufferLength
	}
	return nil
}

func (x *BufferInfo) GetBufferUsageLimit() *wrapperspb.DoubleValue {
	if x != nil {
		return x.BufferUsageLimit
	}
	return nil
}

func (x *BufferInfo) GetBufferUsage() *wrapperspb.DoubleValue {
	if x != nil {
		return x.BufferUsage
	}
	return nil
}

func (x *BufferInfo) GetIsFull() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsFull
	}
	return nil
}

// VertexMetrics is used to provide information about the vertex including processing rate.
type VertexMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline        string                             `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Vertex          string                             `protobuf:"bytes,2,opt,name=vertex,proto3" json:"vertex,omitempty"`
	ProcessingRates map[string]*wrapperspb.DoubleValue `protobuf:"bytes,3,rep,name=processingRates,proto3" json:"processingRates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pendings        map[string]*wrapperspb.Int64Value  `protobuf:"bytes,4,rep,name=pendings,proto3" json:"pendings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VertexMetrics) Reset() {
	*x = VertexMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VertexMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VertexMetrics) ProtoMessage() {}

func (x *VertexMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VertexMetrics.ProtoReflect.Descriptor instead.
func (*VertexMetrics) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *VertexMetrics) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *VertexMetrics) GetVertex() string {
	if x != nil {
		return x.Vertex
	}
	return ""
}

func (x *VertexMetrics) GetProcessingRates() map[string]*wrapperspb.DoubleValue {
	if x != nil {
		return x.ProcessingRates
	}
	return nil
}

func (x *VertexMetrics) GetPendings() map[string]*wrapperspb.Int64Value {
	if x != nil {
		return x.Pendings
	}
	return nil
}

// PipelineStatus
type PipelineStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *PipelineStatus) Reset() {
	*x = PipelineStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PipelineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineStatus) ProtoMessage() {}

func (x *PipelineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineStatus.ProtoReflect.Descriptor instead.
func (*PipelineStatus) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *PipelineStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PipelineStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PipelineStatus) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ListBuffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline string `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
}

func (x *ListBuffersRequest) Reset() {
	*x = ListBuffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuffersRequest) ProtoMessage() {}

func (x *ListBuffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuffersRequest.ProtoReflect.Descriptor instead.
func (*ListBuffersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *ListBuffersRequest) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

type ListBuffersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffers []*BufferInfo `protobuf:"bytes,1,rep,name=buffers,proto3" json:"buffers,omitempty"`
}

func (x *ListBuffersResponse) Reset() {
	*x = ListBuffersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBuffersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuffersResponse) ProtoMessage() {}

func (x *ListBuffersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuffersResponse.ProtoReflect.Descriptor instead.
func (*ListBuffersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{4}
}

func (x *ListBuffersResponse) GetBuffers() []*BufferInfo {
	if x != nil {
		return x.Buffers
	}
	return nil
}

type GetBufferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline string `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Buffer   string `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`
}

func (x *GetBufferRequest) Reset() {
	*x = GetBufferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBufferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBufferRequest) ProtoMessage() {}

func (x *GetBufferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBufferRequest.ProtoReflect.Descriptor instead.
func (*GetBufferRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{5}
}

func (x *GetBufferRequest) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *GetBufferRequest) GetBuffer() string {
	if x != nil {
		return x.Buffer
	}
	return ""
}

type GetBufferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffer *BufferInfo `protobuf:"bytes,1,opt,name=buffer,proto3" json:"buffer,omitempty"`
}

func (x *GetBufferResponse) Reset() {
	*x = GetBufferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBufferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBufferResponse) ProtoMessage() {}

func (x *GetBufferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBufferResponse.ProtoReflect.Descriptor instead.
func (*GetBufferResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{6}
}

func (x *GetBufferResponse) GetBuffer() *BufferInfo {
	if x != nil {
		return x.Buffer
	}
	return nil
}

type GetPipelineStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline string `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
}

func (x *GetPipelineStatusRequest) Reset() {
	*x = GetPipelineStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineStatusRequest) ProtoMessage() {}

func (x *GetPipelineStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineStatusRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{7}
}

func (x *GetPipelineStatusRequest) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

type GetPipelineStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *PipelineStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetPipelineStatusResponse) Reset() {
	*x = GetPipelineStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineStatusResponse) ProtoMessage() {}

func (x *GetPipelineStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineStatusResponse.ProtoReflect.Descriptor instead.
func (*GetPipelineStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{8}
}

func (x *GetPipelineStatusResponse) GetStatus() *PipelineStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetVertexMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline string `protobuf:"bytes,2,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Vertex   string `protobuf:"bytes,3,opt,name=vertex,proto3" json:"vertex,omitempty"`
}

func (x *GetVertexMetricsRequest) Reset() {
	*x = GetVertexMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVertexMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVertexMetricsRequest) ProtoMessage() {}

func (x *GetVertexMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVertexMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetVertexMetricsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{9}
}

func (x *GetVertexMetricsRequest) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *GetVertexMetricsRequest) GetVertex() string {
	if x != nil {
		return x.Vertex
	}
	return ""
}

type GetVertexMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VertexMetrics []*VertexMetrics `protobuf:"bytes,1,rep,name=vertexMetrics,proto3" json:"vertexMetrics,omitempty"`
}

func (x *GetVertexMetricsResponse) Reset() {
	*x = GetVertexMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVertexMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVertexMetricsResponse) ProtoMessage() {}

func (x *GetVertexMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVertexMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetVertexMetricsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{10}
}

func (x *GetVertexMetricsResponse) GetVertexMetrics() []*VertexMetrics {
	if x != nil {
		return x.VertexMetrics
	}
	return nil
}

// EdgeWatermark has edge to watermark mapping.
type EdgeWatermark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline           string                   `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Edge               string                   `protobuf:"bytes,2,opt,name=edge,proto3" json:"edge,omitempty"`
	Watermarks         []*wrapperspb.Int64Value `protobuf:"bytes,3,rep,name=watermarks,proto3" json:"watermarks,omitempty"`
	IsWatermarkEnabled *wrapperspb.BoolValue    `protobuf:"bytes,4,opt,name=isWatermarkEnabled,proto3" json:"isWatermarkEnabled,omitempty"`
	From               string                   `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	To                 string                   `protobuf:"bytes,6,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *EdgeWatermark) Reset() {
	*x = EdgeWatermark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeWatermark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeWatermark) ProtoMessage() {}

func (x *EdgeWatermark) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeWatermark.ProtoReflect.Descriptor instead.
func (*EdgeWatermark) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{11}
}

func (x *EdgeWatermark) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

func (x *EdgeWatermark) GetEdge() string {
	if x != nil {
		return x.Edge
	}
	return ""
}

func (x *EdgeWatermark) GetWatermarks() []*wrapperspb.Int64Value {
	if x != nil {
		return x.Watermarks
	}
	return nil
}

func (x *EdgeWatermark) GetIsWatermarkEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsWatermarkEnabled
	}
	return nil
}

func (x *EdgeWatermark) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EdgeWatermark) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GetPipelineWatermarksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineWatermarks []*EdgeWatermark `protobuf:"bytes,1,rep,name=pipelineWatermarks,proto3" json:"pipelineWatermarks,omitempty"`
}

func (x *GetPipelineWatermarksResponse) Reset() {
	*x = GetPipelineWatermarksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineWatermarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineWatermarksResponse) ProtoMessage() {}

func (x *GetPipelineWatermarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineWatermarksResponse.ProtoReflect.Descriptor instead.
func (*GetPipelineWatermarksResponse) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{12}
}

func (x *GetPipelineWatermarksResponse) GetPipelineWatermarks() []*EdgeWatermark {
	if x != nil {
		return x.PipelineWatermarks
	}
	return nil
}

// GetPipelineWatermarksRequest requests for the watermark for a pipeline.
type GetPipelineWatermarksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline string `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
}

func (x *GetPipelineWatermarksRequest) Reset() {
	*x = GetPipelineWatermarksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPipelineWatermarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineWatermarksRequest) ProtoMessage() {}

func (x *GetPipelineWatermarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_apis_proto_daemon_daemon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineWatermarksRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineWatermarksRequest) Descriptor() ([]byte, []int) {
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP(), []int{13}
}

func (x *GetPipelineWatermarksRequest) GetPipeline() string {
	if x != nil {
		return x.Pipeline
	}
	return ""
}

var File_pkg_apis_proto_daemon_daemon_proto protoreflect.FileDescriptor

var file_pkg_apis_proto_daemon_daemon_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x04, 0x0a, 0x0a, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x61, 0x63, 0x6b, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x0c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x48,
	0x0a, 0x10, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x73, 0x46, 0x75,
	0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x22, 0x96, 0x03, 0x0a,
	0x0d, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x12, 0x54, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x60, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x58, 0x0a, 0x0d, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x0e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0x43, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x3f, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x22, 0x36, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x22, 0x57, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0d, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0d, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x0d, 0x45,
	0x64, 0x67, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x64, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x64, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0a,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x73, 0x57,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x12, 0x69, 0x73, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x64, 0x67, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x12, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x22, 0x3a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0xb6, 0x05,
	0x0a, 0x0d, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x74, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x1a,
	0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12,
	0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x7d, 0x2f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x77, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12,
	0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x73, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x7d, 0x2f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x7d, 0x12, 0x95,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x7d, 0x2f, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x76, 0x65, 0x72, 0x74, 0x65, 0x78, 0x7d, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x12, 0x24, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x7d, 0x2f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x85,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x2f, 0x7b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x7d, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x75, 0x6d, 0x61, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x6e, 0x75,
	0x6d, 0x61, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_apis_proto_daemon_daemon_proto_rawDescOnce sync.Once
	file_pkg_apis_proto_daemon_daemon_proto_rawDescData = file_pkg_apis_proto_daemon_daemon_proto_rawDesc
)

func file_pkg_apis_proto_daemon_daemon_proto_rawDescGZIP() []byte {
	file_pkg_apis_proto_daemon_daemon_proto_rawDescOnce.Do(func() {
		file_pkg_apis_proto_daemon_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_apis_proto_daemon_daemon_proto_rawDescData)
	})
	return file_pkg_apis_proto_daemon_daemon_proto_rawDescData
}

var file_pkg_apis_proto_daemon_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pkg_apis_proto_daemon_daemon_proto_goTypes = []any{
	(*BufferInfo)(nil),                    // 0: daemon.BufferInfo
	(*VertexMetrics)(nil),                 // 1: daemon.VertexMetrics
	(*PipelineStatus)(nil),                // 2: daemon.PipelineStatus
	(*ListBuffersRequest)(nil),            // 3: daemon.ListBuffersRequest
	(*ListBuffersResponse)(nil),           // 4: daemon.ListBuffersResponse
	(*GetBufferRequest)(nil),              // 5: daemon.GetBufferRequest
	(*GetBufferResponse)(nil),             // 6: daemon.GetBufferResponse
	(*GetPipelineStatusRequest)(nil),      // 7: daemon.GetPipelineStatusRequest
	(*GetPipelineStatusResponse)(nil),     // 8: daemon.GetPipelineStatusResponse
	(*GetVertexMetricsRequest)(nil),       // 9: daemon.GetVertexMetricsRequest
	(*GetVertexMetricsResponse)(nil),      // 10: daemon.GetVertexMetricsResponse
	(*EdgeWatermark)(nil),                 // 11: daemon.EdgeWatermark
	(*GetPipelineWatermarksResponse)(nil), // 12: daemon.GetPipelineWatermarksResponse
	(*GetPipelineWatermarksRequest)(nil),  // 13: daemon.GetPipelineWatermarksRequest
	nil,                                   // 14: daemon.VertexMetrics.ProcessingRatesEntry
	nil,                                   // 15: daemon.VertexMetrics.PendingsEntry
	(*wrapperspb.Int64Value)(nil),         // 16: google.protobuf.Int64Value
	(*wrapperspb.DoubleValue)(nil),        // 17: google.protobuf.DoubleValue
	(*wrapperspb.BoolValue)(nil),          // 18: google.protobuf.BoolValue
}
var file_pkg_apis_proto_daemon_daemon_proto_depIdxs = []int32{
	16, // 0: daemon.BufferInfo.pendingCount:type_name -> google.protobuf.Int64Value
	16, // 1: daemon.BufferInfo.ackPendingCount:type_name -> google.protobuf.Int64Value
	16, // 2: daemon.BufferInfo.totalMessages:type_name -> google.protobuf.Int64Value
	16, // 3: daemon.BufferInfo.bufferLength:type_name -> google.protobuf.Int64Value
	17, // 4: daemon.BufferInfo.bufferUsageLimit:type_name -> google.protobuf.DoubleValue
	17, // 5: daemon.BufferInfo.bufferUsage:type_name -> google.protobuf.DoubleValue
	18, // 6: daemon.BufferInfo.isFull:type_name -> google.protobuf.BoolValue
	14, // 7: daemon.VertexMetrics.processingRates:type_name -> daemon.VertexMetrics.ProcessingRatesEntry
	15, // 8: daemon.VertexMetrics.pendings:type_name -> daemon.VertexMetrics.PendingsEntry
	0,  // 9: daemon.ListBuffersResponse.buffers:type_name -> daemon.BufferInfo
	0,  // 10: daemon.GetBufferResponse.buffer:type_name -> daemon.BufferInfo
	2,  // 11: daemon.GetPipelineStatusResponse.status:type_name -> daemon.PipelineStatus
	1,  // 12: daemon.GetVertexMetricsResponse.vertexMetrics:type_name -> daemon.VertexMetrics
	16, // 13: daemon.EdgeWatermark.watermarks:type_name -> google.protobuf.Int64Value
	18, // 14: daemon.EdgeWatermark.isWatermarkEnabled:type_name -> google.protobuf.BoolValue
	11, // 15: daemon.GetPipelineWatermarksResponse.pipelineWatermarks:type_name -> daemon.EdgeWatermark
	17, // 16: daemon.VertexMetrics.ProcessingRatesEntry.value:type_name -> google.protobuf.DoubleValue
	16, // 17: daemon.VertexMetrics.PendingsEntry.value:type_name -> google.protobuf.Int64Value
	3,  // 18: daemon.DaemonService.ListBuffers:input_type -> daemon.ListBuffersRequest
	5,  // 19: daemon.DaemonService.GetBuffer:input_type -> daemon.GetBufferRequest
	9,  // 20: daemon.DaemonService.GetVertexMetrics:input_type -> daemon.GetVertexMetricsRequest
	13, // 21: daemon.DaemonService.GetPipelineWatermarks:input_type -> daemon.GetPipelineWatermarksRequest
	7,  // 22: daemon.DaemonService.GetPipelineStatus:input_type -> daemon.GetPipelineStatusRequest
	4,  // 23: daemon.DaemonService.ListBuffers:output_type -> daemon.ListBuffersResponse
	6,  // 24: daemon.DaemonService.GetBuffer:output_type -> daemon.GetBufferResponse
	10, // 25: daemon.DaemonService.GetVertexMetrics:output_type -> daemon.GetVertexMetricsResponse
	12, // 26: daemon.DaemonService.GetPipelineWatermarks:output_type -> daemon.GetPipelineWatermarksResponse
	8,  // 27: daemon.DaemonService.GetPipelineStatus:output_type -> daemon.GetPipelineStatusResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_pkg_apis_proto_daemon_daemon_proto_init() }
func file_pkg_apis_proto_daemon_daemon_proto_init() {
	if File_pkg_apis_proto_daemon_daemon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BufferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*VertexMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PipelineStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListBuffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListBuffersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetBufferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetBufferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetPipelineStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetPipelineStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetVertexMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetVertexMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*EdgeWatermark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetPipelineWatermarksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_apis_proto_daemon_daemon_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetPipelineWatermarksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_apis_proto_daemon_daemon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_apis_proto_daemon_daemon_proto_goTypes,
		DependencyIndexes: file_pkg_apis_proto_daemon_daemon_proto_depIdxs,
		MessageInfos:      file_pkg_apis_proto_daemon_daemon_proto_msgTypes,
	}.Build()
	File_pkg_apis_proto_daemon_daemon_proto = out.File
	file_pkg_apis_proto_daemon_daemon_proto_rawDesc = nil
	file_pkg_apis_proto_daemon_daemon_proto_goTypes = nil
	file_pkg_apis_proto_daemon_daemon_proto_depIdxs = nil
}
