name: release

on:
  push:
    tags:
      - "v*"
    branches:
      - main
      - dev-release*

defaults:
  run:
    shell: bash

jobs:
  build-go-binaries:
    runs-on: ubuntu-24.04
    if: github.repository == 'numaproj/numaflow'
    name: Build binaries
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build binaries
        run: |
          make build
          chmod -R +x dist
      - name: Make checksums
        run: make checksums
      - name: store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist

  build-rust-amd64:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          rustflags: ""
      - name: Install dependencies
        run: sudo apt-get install -y protobuf-compiler
      - name: Build binary
        run: RUSTFLAGS='-C target-feature=+crt-static' cargo build --release --target x86_64-unknown-linux-gnu
      - name: Rename binary
        run: cp -pv target/x86_64-unknown-linux-gnu/release/numaflow numaflow-rs-linux-amd64
      - name: Upload numaflow binary
        uses: actions/upload-artifact@v4
        with:
          name: numaflow-rs-linux-amd64
          path: rust/numaflow-rs-linux-amd64

  build-rust-arm64:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v4
      - name: Update Rust Toolchain Target
        run: |
          echo "targets = ['aarch64-unknown-linux-gnu']" >> rust-toolchain.toml
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        with:
          rustflags: ""
      - name: Install dependenices
        run: sudo apt-get install -y gcc-aarch64-linux-gnu protobuf-compiler
      - name: Build binary
        run: RUSTFLAGS='-C target-feature=+crt-static -C linker=aarch64-linux-gnu-gcc' cargo build --release --target aarch64-unknown-linux-gnu
      - name: Rename binary
        run: cp -pv target/aarch64-unknown-linux-gnu/release/numaflow numaflow-rs-linux-arm64
      - name: Upload numaflow binary
        uses: actions/upload-artifact@v4
        with:
          name: numaflow-rs-linux-arm64
          path: rust/numaflow-rs-linux-arm64
