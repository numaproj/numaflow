name: PR description reminder

permissions:
  contents: read
  pull-requests: write

on:
  pull_request_target:
    types: [opened, edited, synchronize, reopened]

jobs:
  remind:
    runs-on: ubuntu-latest
    steps:
      - name: Post reminder comment if sections missing (non-blocking)
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request
            const actor = context.actor
            const labels = (pr.labels || []).map(l => l.name)
            
            // Skip bots or opt-out label
            if (['dependabot[bot]', 'github-actions[bot]'].includes(actor) || labels.includes('skip-pr-template-check')) {
              return
            }

            // Skip changelog-only PRs
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              per_page: 300
            })
            const onlyChangelog = files.every(f => (
              f.filename === 'CHANGELOG.md' ||
              f.filename.startsWith('docs/changelog/') ||
              f.filename.startsWith('.changesets/')
            ))
            if (onlyChangelog) { return }

            const body = pr.body || ''
            const hasSummary = /^(###\s*(Summary|What this PR does\b|Why we need it))/im.test(body)
            const hasTesting = /^(###\s*(How has this been tested\?|How was this tested\?|Testing(\/Preview)?))/im.test(body)
            if (hasSummary && hasTesting) { return }

            let missing = []
            if (!hasSummary) missing.push('- A primary description heading (e.g., "### What this PR does / why we need it" or "### Summary")')
            if (!hasTesting) missing.push('- A testing section (e.g., "### How was this tested?", "### How has this been tested?", or "### Testing")')
            const comment = `Thanks for the PR! Please consider updating the description to include:\n\n${missing.join('\n')}\n\nThis is a reminder only and won't block your PR.`
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: comment,
            })

