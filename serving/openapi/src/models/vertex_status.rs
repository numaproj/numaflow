/*
 * Numaflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VertexStatus {
    /// Conditions are the latest available observations of a resource's current state.
    #[serde(rename = "conditions", skip_serializing_if = "Option::is_none")]
    pub conditions: Option<Vec<models::V1PeriodCondition>>,
    #[serde(rename = "lastScaledAt", skip_serializing_if = "Option::is_none")]
    pub last_scaled_at: Option<models::V1PeriodTime>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// ObservedGeneration stores the generation value observed by the controller.
    #[serde(rename = "observedGeneration", skip_serializing_if = "Option::is_none")]
    pub observed_generation: Option<i64>,
    #[serde(rename = "phase")]
    pub phase: String,
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(rename = "replicas")]
    pub replicas: i64,
    #[serde(rename = "selector", skip_serializing_if = "Option::is_none")]
    pub selector: Option<String>,
}

impl VertexStatus {
    pub fn new(phase: String, replicas: i64) -> VertexStatus {
        VertexStatus {
            conditions: None,
            last_scaled_at: None,
            message: None,
            observed_generation: None,
            phase,
            reason: None,
            replicas,
            selector: None,
        }
    }
}

