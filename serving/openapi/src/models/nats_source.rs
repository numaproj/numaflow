/*
 * Numaflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NatsSource {
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<Box<crate::models::NatsAuth>>,
    /// Queue is used for queue subscription.
    #[serde(rename = "queue")]
    pub queue: String,
    /// Subject holds the name of the subject onto which messages are published.
    #[serde(rename = "subject")]
    pub subject: String,
    #[serde(rename = "tls", skip_serializing_if = "Option::is_none")]
    pub tls: Option<Box<crate::models::Tls>>,
    /// URL to connect to NATS cluster, multiple urls could be separated by comma.
    #[serde(rename = "url")]
    pub url: String,
}

impl NatsSource {
    pub fn new(queue: String, subject: String, url: String) -> NatsSource {
        NatsSource {
            auth: None,
            queue,
            subject,
            tls: None,
            url,
        }
    }
}


