/*
 * Numaflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContainerTemplate : ContainerTemplate defines customized spec for a container
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContainerTemplate {
    #[serde(rename = "env", skip_serializing_if = "Option::is_none")]
    pub env: Option<Vec<models::V1PeriodEnvVar>>,
    #[serde(rename = "envFrom", skip_serializing_if = "Option::is_none")]
    pub env_from: Option<Vec<models::V1PeriodEnvFromSource>>,
    #[serde(rename = "imagePullPolicy", skip_serializing_if = "Option::is_none")]
    pub image_pull_policy: Option<String>,
    #[serde(rename = "resources", skip_serializing_if = "Option::is_none")]
    pub resources: Option<models::V1PeriodResourceRequirements>,
    #[serde(rename = "securityContext", skip_serializing_if = "Option::is_none")]
    pub security_context: Option<models::V1PeriodSecurityContext>,
}

impl ContainerTemplate {
    /// ContainerTemplate defines customized spec for a container
    pub fn new() -> ContainerTemplate {
        ContainerTemplate {
            env: None,
            env_from: None,
            image_pull_policy: None,
            resources: None,
            security_context: None,
        }
    }
}

