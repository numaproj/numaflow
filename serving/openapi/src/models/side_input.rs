/*
 * Numaflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SideInput : SideInput defines information of a Side Input
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SideInput {
    #[serde(rename = "container")]
    pub container: Box<models::Container>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "trigger")]
    pub trigger: Box<models::SideInputTrigger>,
    #[serde(rename = "volumes", skip_serializing_if = "Option::is_none")]
    pub volumes: Option<Vec<models::V1PeriodVolume>>,
}

impl SideInput {
    /// SideInput defines information of a Side Input
    pub fn new(container: models::Container, name: String, trigger: models::SideInputTrigger) -> SideInput {
        SideInput {
            container: Box::new(container),
            name,
            trigger: Box::new(trigger),
            volumes: None,
        }
    }
}

