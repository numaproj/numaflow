/*
 * Numaflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct JetStreamConfig {
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<Box<models::NatsAuth>>,
    #[serde(rename = "streamConfig", skip_serializing_if = "Option::is_none")]
    pub stream_config: Option<String>,
    /// TLS enabled or not
    #[serde(rename = "tlsEnabled", skip_serializing_if = "Option::is_none")]
    pub tls_enabled: Option<bool>,
    /// JetStream (NATS) URL
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl JetStreamConfig {
    pub fn new() -> JetStreamConfig {
        JetStreamConfig {
            auth: None,
            stream_config: None,
            tls_enabled: None,
            url: None,
        }
    }
}

