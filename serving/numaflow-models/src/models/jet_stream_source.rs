/*
Copyright 2022 The Numaproj Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Openapi Generator. DO NOT EDIT.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct JetStreamSource {
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<Box<crate::models::NatsAuth>>,
    /// Stream represents the name of the stream.
    #[serde(rename = "stream")]
    pub stream: String,
    #[serde(rename = "tls", skip_serializing_if = "Option::is_none")]
    pub tls: Option<Box<crate::models::Tls>>,
    /// URL to connect to NATS cluster, multiple urls could be separated by comma.
    #[serde(rename = "url")]
    pub url: String,
}

impl JetStreamSource {
    pub fn new(stream: String, url: String) -> JetStreamSource {
        JetStreamSource {
            auth: None,
            stream,
            tls: None,
            url,
        }
    }
}
