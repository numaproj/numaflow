/*
 * Numaflow
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GeneratorSource {
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<kube::core::Duration>,
    #[serde(rename = "jitter", skip_serializing_if = "Option::is_none")]
    pub jitter: Option<kube::core::Duration>,
    /// KeyCount is the number of unique keys in the payload
    #[serde(rename = "keyCount", skip_serializing_if = "Option::is_none")]
    pub key_count: Option<i32>,
    /// Size of each generated message
    #[serde(rename = "msgSize", skip_serializing_if = "Option::is_none")]
    pub msg_size: Option<i32>,
    #[serde(rename = "rpu", skip_serializing_if = "Option::is_none")]
    pub rpu: Option<i64>,
    /// Value is an optional uint64 value to be written in to the payload
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<i64>,
    /// ValueBlob is an optional string which is the base64 encoding of direct payload to send. This is useful for attaching a GeneratorSource to a true pipeline to test load behavior with true messages without requiring additional work to generate messages through the external source if present, the Value and MsgSize fields will be ignored.
    #[serde(rename = "valueBlob", skip_serializing_if = "Option::is_none")]
    pub value_blob: Option<String>,
}

impl GeneratorSource {
    pub fn new() -> GeneratorSource {
        GeneratorSource {
            duration: None,
            jitter: None,
            key_count: None,
            msg_size: None,
            rpu: None,
            value: None,
            value_blob: None,
        }
    }
}
