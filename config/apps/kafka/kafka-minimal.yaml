# http://www.smartjava.org/content/minimal-kafka-instance-for-k8s/
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
    - name: client
      port: 2181
    - name: follower
      port: 2888
    - name: leader
      port: 3888
  selector:
    app: zookeeper

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: main
          image: wurstmeister/zookeeper
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_ID
              value: "1"
            - name: ZOOKEEPER_SERVER_1
              value: zoo
          readinessProbe:
            tcpSocket:
              port: 2181
  serviceName: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
spec:
  ports:
    - port: 9092
  selector:
    app: kafka-broker
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kafka-broker
spec:
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      containers:
        - name: main
          image: wurstmeister/kafka:2.13-2.8.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka-broker
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_BROKER_ID
              value: "0"
            - name: KAFKA_CREATE_TOPICS
              value: "kafka-topic:2:1,input-topic:1:1,middle-topic:1:1,output-topic:1:1"
          readinessProbe:
            tcpSocket:
              port: 9092
  selector:
    matchLabels:
      app: kafka-broker

  serviceName: kafka-broker
