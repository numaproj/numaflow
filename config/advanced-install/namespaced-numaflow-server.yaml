apiVersion: v1
kind: ServiceAccount
metadata:
  name: numaflow-server-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  name: numaflow-server-role
rules:
- apiGroups:
  - numaflow.numaproj.io
  resources:
  - interstepbufferservices
  - interstepbufferservices/finalizers
  - interstepbufferservices/status
  - pipelines
  - pipelines/finalizers
  - pipelines/status
  - vertices
  - vertices/finalizers
  - vertices/status
  - vertices/scale
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  - pods
  - pods/log
  - pods/exec
  - configmaps
  - services
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  name: numaflow-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: numaflow-server-role
subjects:
- kind: ServiceAccount
  name: numaflow-server-sa
---
apiVersion: v1
data:
  server.disable.auth: "true"
kind: ConfigMap
metadata:
  name: numaflow-server-cmd-params-config
---
apiVersion: v1
data:
  rbac-conf.yaml: |
    policy.default: role:readonly
    # The scopes field controls which authentication scopes to examine during rbac enforcement.
    # We can have multiple scopes, and the first scope that matches with the policy will be used.
    # The default value is "groups", which means that the groups field of the user's token will be examined
    # The other possible value is "email", which means that the email field of the user's token will be examined
    # It can be provided as a comma-separated list, e.g "groups,email"
    # policy.scopes: groups,email
  rbac-policy.csv: |
    # Policies go here
    p, role:admin, *, *, *
    p, role:readonly, *, *, GET
    # Groups go here
    # g, admin, role:admin
    # g, my-github-org:my-github-team, role:readonly
kind: ConfigMap
metadata:
  name: numaflow-server-rbac-config
---
apiVersion: v1
kind: Service
metadata:
  name: numaflow-server
spec:
  ports:
  - port: 8443
    targetPort: 8443
  selector:
    app.kubernetes.io/component: numaflow-ux
    app.kubernetes.io/name: numaflow-ux
    app.kubernetes.io/part-of: numaflow
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: numaflow-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: numaflow-ux
      app.kubernetes.io/name: numaflow-ux
      app.kubernetes.io/part-of: numaflow
  template:
    metadata:
      labels:
        app.kubernetes.io/component: numaflow-ux
        app.kubernetes.io/name: numaflow-ux
        app.kubernetes.io/part-of: numaflow
    spec:
      containers:
      - args:
        - server
        - --namespaced
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NUMAFLOW_SERVER_INSECURE
          valueFrom:
            configMapKeyRef:
              key: server.insecure
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_PORT_NUMBER
          valueFrom:
            configMapKeyRef:
              key: server.port
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_NAMESPACED
          valueFrom:
            configMapKeyRef:
              key: server.namespaced
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_MANAGED_NAMESPACE
          valueFrom:
            configMapKeyRef:
              key: server.managed.namespace
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_BASE_HREF
          valueFrom:
            configMapKeyRef:
              key: server.base.href
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_DISABLE_AUTH
          valueFrom:
            configMapKeyRef:
              key: server.disable.auth
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_DEX_SERVER_ADDR
          valueFrom:
            configMapKeyRef:
              key: server.dex.server
              name: numaflow-server-cmd-params-config
              optional: true
        - name: NUMAFLOW_SERVER_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: server.address
              name: numaflow-server-cmd-params-config
              optional: true
        image: quay.io/numaproj/numaflow:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /livez
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 3
        name: main
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /ui/build/runtime-env.js
          name: env-volume
          subPath: runtime-env.js
        - mountPath: /ui/build/index.html
          name: env-volume
          subPath: index.html
        - mountPath: /etc/numaflow
          name: rbac-config
      initContainers:
      - args:
        - server-init
        env:
        - name: NUMAFLOW_SERVER_BASE_HREF
          valueFrom:
            configMapKeyRef:
              key: server.base.href
              name: numaflow-server-cmd-params-config
              optional: true
        image: quay.io/numaproj/numaflow:latest
        imagePullPolicy: Always
        name: server-init
        volumeMounts:
        - mountPath: /opt/numaflow
          name: env-volume
      securityContext:
        runAsNonRoot: true
        runAsUser: 9737
      serviceAccountName: numaflow-server-sa
      volumes:
      - emptyDir: {}
        name: env-volume
      - configMap:
          name: numaflow-server-rbac-config
        name: rbac-config
