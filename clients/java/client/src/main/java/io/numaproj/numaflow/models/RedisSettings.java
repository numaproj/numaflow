/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RedisSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RedisSettings {
  public static final String SERIALIZED_NAME_MASTER = "master";
  @SerializedName(SERIALIZED_NAME_MASTER)
  private String master;

  public static final String SERIALIZED_NAME_REDIS = "redis";
  @SerializedName(SERIALIZED_NAME_REDIS)
  private String redis;

  public static final String SERIALIZED_NAME_REPLICA = "replica";
  @SerializedName(SERIALIZED_NAME_REPLICA)
  private String replica;

  public static final String SERIALIZED_NAME_SENTINEL = "sentinel";
  @SerializedName(SERIALIZED_NAME_SENTINEL)
  private String sentinel;


  public RedisSettings master(String master) {
    
    this.master = master;
    return this;
  }

   /**
   * Special settings for Redis master node, will override the global settings from controller config
   * @return master
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Special settings for Redis master node, will override the global settings from controller config")

  public String getMaster() {
    return master;
  }


  public void setMaster(String master) {
    this.master = master;
  }


  public RedisSettings redis(String redis) {
    
    this.redis = redis;
    return this;
  }

   /**
   * Redis settings shared by both master and slaves, will override the global settings from controller config
   * @return redis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Redis settings shared by both master and slaves, will override the global settings from controller config")

  public String getRedis() {
    return redis;
  }


  public void setRedis(String redis) {
    this.redis = redis;
  }


  public RedisSettings replica(String replica) {
    
    this.replica = replica;
    return this;
  }

   /**
   * Special settings for Redis replica nodes, will override the global settings from controller config
   * @return replica
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Special settings for Redis replica nodes, will override the global settings from controller config")

  public String getReplica() {
    return replica;
  }


  public void setReplica(String replica) {
    this.replica = replica;
  }


  public RedisSettings sentinel(String sentinel) {
    
    this.sentinel = sentinel;
    return this;
  }

   /**
   * Sentinel settings, will override the global settings from controller config
   * @return sentinel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sentinel settings, will override the global settings from controller config")

  public String getSentinel() {
    return sentinel;
  }


  public void setSentinel(String sentinel) {
    this.sentinel = sentinel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedisSettings redisSettings = (RedisSettings) o;
    return Objects.equals(this.master, redisSettings.master) &&
        Objects.equals(this.redis, redisSettings.redis) &&
        Objects.equals(this.replica, redisSettings.replica) &&
        Objects.equals(this.sentinel, redisSettings.sentinel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(master, redis, replica, sentinel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedisSettings {\n");
    sb.append("    master: ").append(toIndentedString(master)).append("\n");
    sb.append("    redis: ").append(toIndentedString(redis)).append("\n");
    sb.append("    replica: ").append(toIndentedString(replica)).append("\n");
    sb.append("    sentinel: ").append(toIndentedString(sentinel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

