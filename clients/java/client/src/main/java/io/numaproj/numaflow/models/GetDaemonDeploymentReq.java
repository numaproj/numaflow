/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.openapi.models.V1EnvVar;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GetDaemonDeploymentReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetDaemonDeploymentReq {
  public static final String SERIALIZED_NAME_ENV = "Env";
  @SerializedName(SERIALIZED_NAME_ENV)
  private List<V1EnvVar> env = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_B_SVC_TYPE = "ISBSvcType";
  @SerializedName(SERIALIZED_NAME_IS_B_SVC_TYPE)
  private String isBSvcType;

  public static final String SERIALIZED_NAME_IMAGE = "Image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_PULL_POLICY = "PullPolicy";
  @SerializedName(SERIALIZED_NAME_PULL_POLICY)
  private String pullPolicy;


  public GetDaemonDeploymentReq env(List<V1EnvVar> env) {
    
    this.env = env;
    return this;
  }

  public GetDaemonDeploymentReq addEnvItem(V1EnvVar envItem) {
    this.env.add(envItem);
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<V1EnvVar> getEnv() {
    return env;
  }


  public void setEnv(List<V1EnvVar> env) {
    this.env = env;
  }


  public GetDaemonDeploymentReq isBSvcType(String isBSvcType) {
    
    this.isBSvcType = isBSvcType;
    return this;
  }

   /**
   * Get isBSvcType
   * @return isBSvcType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getIsBSvcType() {
    return isBSvcType;
  }


  public void setIsBSvcType(String isBSvcType) {
    this.isBSvcType = isBSvcType;
  }


  public GetDaemonDeploymentReq image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public GetDaemonDeploymentReq pullPolicy(String pullPolicy) {
    
    this.pullPolicy = pullPolicy;
    return this;
  }

   /**
   * Get pullPolicy
   * @return pullPolicy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPullPolicy() {
    return pullPolicy;
  }


  public void setPullPolicy(String pullPolicy) {
    this.pullPolicy = pullPolicy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDaemonDeploymentReq getDaemonDeploymentReq = (GetDaemonDeploymentReq) o;
    return Objects.equals(this.env, getDaemonDeploymentReq.env) &&
        Objects.equals(this.isBSvcType, getDaemonDeploymentReq.isBSvcType) &&
        Objects.equals(this.image, getDaemonDeploymentReq.image) &&
        Objects.equals(this.pullPolicy, getDaemonDeploymentReq.pullPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(env, isBSvcType, image, pullPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDaemonDeploymentReq {\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    isBSvcType: ").append(toIndentedString(isBSvcType)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    pullPolicy: ").append(toIndentedString(pullPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

