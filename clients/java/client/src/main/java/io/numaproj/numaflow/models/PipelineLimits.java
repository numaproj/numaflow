/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.Duration;

/**
 * PipelineLimits
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PipelineLimits {
  public static final String SERIALIZED_NAME_BUFFER_MAX_LENGTH = "bufferMaxLength";
  @SerializedName(SERIALIZED_NAME_BUFFER_MAX_LENGTH)
  private Long bufferMaxLength;

  public static final String SERIALIZED_NAME_BUFFER_USAGE_LIMIT = "bufferUsageLimit";
  @SerializedName(SERIALIZED_NAME_BUFFER_USAGE_LIMIT)
  private Long bufferUsageLimit;

  public static final String SERIALIZED_NAME_READ_BATCH_SIZE = "readBatchSize";
  @SerializedName(SERIALIZED_NAME_READ_BATCH_SIZE)
  private Long readBatchSize;

  public static final String SERIALIZED_NAME_READ_TIMEOUT = "readTimeout";
  @SerializedName(SERIALIZED_NAME_READ_TIMEOUT)
  private java.time.Duration readTimeout = null;


  public PipelineLimits bufferMaxLength(Long bufferMaxLength) {
    
    this.bufferMaxLength = bufferMaxLength;
    return this;
  }

   /**
   * BufferMaxLength is used to define the max length of a buffer Only applies to UDF and Source vertice as only they do buffer write. It can be overridden by the settings in vertex limits.
   * @return bufferMaxLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BufferMaxLength is used to define the max length of a buffer Only applies to UDF and Source vertice as only they do buffer write. It can be overridden by the settings in vertex limits.")

  public Long getBufferMaxLength() {
    return bufferMaxLength;
  }


  public void setBufferMaxLength(Long bufferMaxLength) {
    this.bufferMaxLength = bufferMaxLength;
  }


  public PipelineLimits bufferUsageLimit(Long bufferUsageLimit) {
    
    this.bufferUsageLimit = bufferUsageLimit;
    return this;
  }

   /**
   * BufferUsageLimit is used to define the pencentage of the buffer usage limit, a valid value should be less than 100, for example, 85. Only applies to UDF and Source vertice as only they do buffer write. It will be overridden by the settings in vertex limits.
   * @return bufferUsageLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "BufferUsageLimit is used to define the pencentage of the buffer usage limit, a valid value should be less than 100, for example, 85. Only applies to UDF and Source vertice as only they do buffer write. It will be overridden by the settings in vertex limits.")

  public Long getBufferUsageLimit() {
    return bufferUsageLimit;
  }


  public void setBufferUsageLimit(Long bufferUsageLimit) {
    this.bufferUsageLimit = bufferUsageLimit;
  }


  public PipelineLimits readBatchSize(Long readBatchSize) {
    
    this.readBatchSize = readBatchSize;
    return this;
  }

   /**
   * Read batch size for all the vertices in the pipeline, can be overridden by the vertex&#39;s limit settings
   * @return readBatchSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Read batch size for all the vertices in the pipeline, can be overridden by the vertex's limit settings")

  public Long getReadBatchSize() {
    return readBatchSize;
  }


  public void setReadBatchSize(Long readBatchSize) {
    this.readBatchSize = readBatchSize;
  }


  public PipelineLimits readTimeout(java.time.Duration readTimeout) {
    
    this.readTimeout = readTimeout;
    return this;
  }

   /**
   * Get readTimeout
   * @return readTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public java.time.Duration getReadTimeout() {
    return readTimeout;
  }


  public void setReadTimeout(java.time.Duration readTimeout) {
    this.readTimeout = readTimeout;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineLimits pipelineLimits = (PipelineLimits) o;
    return Objects.equals(this.bufferMaxLength, pipelineLimits.bufferMaxLength) &&
        Objects.equals(this.bufferUsageLimit, pipelineLimits.bufferUsageLimit) &&
        Objects.equals(this.readBatchSize, pipelineLimits.readBatchSize) &&
        Objects.equals(this.readTimeout, pipelineLimits.readTimeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bufferMaxLength, bufferUsageLimit, readBatchSize, readTimeout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineLimits {\n");
    sb.append("    bufferMaxLength: ").append(toIndentedString(bufferMaxLength)).append("\n");
    sb.append("    bufferUsageLimit: ").append(toIndentedString(bufferUsageLimit)).append("\n");
    sb.append("    readBatchSize: ").append(toIndentedString(readBatchSize)).append("\n");
    sb.append("    readTimeout: ").append(toIndentedString(readTimeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

