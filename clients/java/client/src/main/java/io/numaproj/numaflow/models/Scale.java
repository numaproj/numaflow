/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Scale
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Scale {
  public static final String SERIALIZED_NAME_COOLDOWN_SECONDS = "cooldownSeconds";
  @SerializedName(SERIALIZED_NAME_COOLDOWN_SECONDS)
  private Long cooldownSeconds;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_LOOKBACK_SECONDS = "lookbackSeconds";
  @SerializedName(SERIALIZED_NAME_LOOKBACK_SECONDS)
  private Long lookbackSeconds;

  public static final String SERIALIZED_NAME_MAX = "max";
  @SerializedName(SERIALIZED_NAME_MAX)
  private Integer max;

  public static final String SERIALIZED_NAME_MIN = "min";
  @SerializedName(SERIALIZED_NAME_MIN)
  private Integer min;

  public static final String SERIALIZED_NAME_REPLICAS_PER_SCALE = "replicasPerScale";
  @SerializedName(SERIALIZED_NAME_REPLICAS_PER_SCALE)
  private Long replicasPerScale;

  public static final String SERIALIZED_NAME_TARGET_BUFFER_USAGE = "targetBufferUsage";
  @SerializedName(SERIALIZED_NAME_TARGET_BUFFER_USAGE)
  private Long targetBufferUsage;

  public static final String SERIALIZED_NAME_TARGET_PROCESSING_SECONDS = "targetProcessingSeconds";
  @SerializedName(SERIALIZED_NAME_TARGET_PROCESSING_SECONDS)
  private Long targetProcessingSeconds;

  public static final String SERIALIZED_NAME_ZERO_REPLICA_SLEEP_SECONDS = "zeroReplicaSleepSeconds";
  @SerializedName(SERIALIZED_NAME_ZERO_REPLICA_SLEEP_SECONDS)
  private Long zeroReplicaSleepSeconds;


  public Scale cooldownSeconds(Long cooldownSeconds) {
    
    this.cooldownSeconds = cooldownSeconds;
    return this;
  }

   /**
   * Cooldown seconds after a scaling operation before another one.
   * @return cooldownSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cooldown seconds after a scaling operation before another one.")

  public Long getCooldownSeconds() {
    return cooldownSeconds;
  }


  public void setCooldownSeconds(Long cooldownSeconds) {
    this.cooldownSeconds = cooldownSeconds;
  }


  public Scale disabled(Boolean disabled) {
    
    this.disabled = disabled;
    return this;
  }

   /**
   * Whether to disable autoscaling. Set to \&quot;true\&quot; when using Kubernetes HPA or any other 3rd party autoscaling strategies.
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to disable autoscaling. Set to \"true\" when using Kubernetes HPA or any other 3rd party autoscaling strategies.")

  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public Scale lookbackSeconds(Long lookbackSeconds) {
    
    this.lookbackSeconds = lookbackSeconds;
    return this;
  }

   /**
   * Lookback seconds to calculate the average pending messages and processing rate.
   * @return lookbackSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Lookback seconds to calculate the average pending messages and processing rate.")

  public Long getLookbackSeconds() {
    return lookbackSeconds;
  }


  public void setLookbackSeconds(Long lookbackSeconds) {
    this.lookbackSeconds = lookbackSeconds;
  }


  public Scale max(Integer max) {
    
    this.max = max;
    return this;
  }

   /**
   * Maximum replicas.
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum replicas.")

  public Integer getMax() {
    return max;
  }


  public void setMax(Integer max) {
    this.max = max;
  }


  public Scale min(Integer min) {
    
    this.min = min;
    return this;
  }

   /**
   * Minimum replicas.
   * @return min
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimum replicas.")

  public Integer getMin() {
    return min;
  }


  public void setMin(Integer min) {
    this.min = min;
  }


  public Scale replicasPerScale(Long replicasPerScale) {
    
    this.replicasPerScale = replicasPerScale;
    return this;
  }

   /**
   * ReplicasPerScale defines maximum replicas can be scaled up or down at once. The is use to prevent too aggresive scaling operations
   * @return replicasPerScale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ReplicasPerScale defines maximum replicas can be scaled up or down at once. The is use to prevent too aggresive scaling operations")

  public Long getReplicasPerScale() {
    return replicasPerScale;
  }


  public void setReplicasPerScale(Long replicasPerScale) {
    this.replicasPerScale = replicasPerScale;
  }


  public Scale targetBufferUsage(Long targetBufferUsage) {
    
    this.targetBufferUsage = targetBufferUsage;
    return this;
  }

   /**
   * TargetBufferUsage is used to define the target pencentage of usage of the buffer to be read. A valid and meaningful value should be less than the BufferUsageLimit defined in the Edge spec (or Pipeline spec), for example, 50. It only applies to UDF and Sink vertices as only they have buffers to read.
   * @return targetBufferUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TargetBufferUsage is used to define the target pencentage of usage of the buffer to be read. A valid and meaningful value should be less than the BufferUsageLimit defined in the Edge spec (or Pipeline spec), for example, 50. It only applies to UDF and Sink vertices as only they have buffers to read.")

  public Long getTargetBufferUsage() {
    return targetBufferUsage;
  }


  public void setTargetBufferUsage(Long targetBufferUsage) {
    this.targetBufferUsage = targetBufferUsage;
  }


  public Scale targetProcessingSeconds(Long targetProcessingSeconds) {
    
    this.targetProcessingSeconds = targetProcessingSeconds;
    return this;
  }

   /**
   * TargetProcessingSeconds is used to tune the aggressiveness of autoscaling for source vertices, it measures how fast you want the vertex to process all the pending messages. Typically increasing the value, which leads to lower processing rate, thus less replicas. It&#39;s only effective for source vertices.
   * @return targetProcessingSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TargetProcessingSeconds is used to tune the aggressiveness of autoscaling for source vertices, it measures how fast you want the vertex to process all the pending messages. Typically increasing the value, which leads to lower processing rate, thus less replicas. It's only effective for source vertices.")

  public Long getTargetProcessingSeconds() {
    return targetProcessingSeconds;
  }


  public void setTargetProcessingSeconds(Long targetProcessingSeconds) {
    this.targetProcessingSeconds = targetProcessingSeconds;
  }


  public Scale zeroReplicaSleepSeconds(Long zeroReplicaSleepSeconds) {
    
    this.zeroReplicaSleepSeconds = zeroReplicaSleepSeconds;
    return this;
  }

   /**
   * After scaling down to 0, sleep how many seconds before scaling up to peek.
   * @return zeroReplicaSleepSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "After scaling down to 0, sleep how many seconds before scaling up to peek.")

  public Long getZeroReplicaSleepSeconds() {
    return zeroReplicaSleepSeconds;
  }


  public void setZeroReplicaSleepSeconds(Long zeroReplicaSleepSeconds) {
    this.zeroReplicaSleepSeconds = zeroReplicaSleepSeconds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Scale scale = (Scale) o;
    return Objects.equals(this.cooldownSeconds, scale.cooldownSeconds) &&
        Objects.equals(this.disabled, scale.disabled) &&
        Objects.equals(this.lookbackSeconds, scale.lookbackSeconds) &&
        Objects.equals(this.max, scale.max) &&
        Objects.equals(this.min, scale.min) &&
        Objects.equals(this.replicasPerScale, scale.replicasPerScale) &&
        Objects.equals(this.targetBufferUsage, scale.targetBufferUsage) &&
        Objects.equals(this.targetProcessingSeconds, scale.targetProcessingSeconds) &&
        Objects.equals(this.zeroReplicaSleepSeconds, scale.zeroReplicaSleepSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cooldownSeconds, disabled, lookbackSeconds, max, min, replicasPerScale, targetBufferUsage, targetProcessingSeconds, zeroReplicaSleepSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Scale {\n");
    sb.append("    cooldownSeconds: ").append(toIndentedString(cooldownSeconds)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    lookbackSeconds: ").append(toIndentedString(lookbackSeconds)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    replicasPerScale: ").append(toIndentedString(replicasPerScale)).append("\n");
    sb.append("    targetBufferUsage: ").append(toIndentedString(targetBufferUsage)).append("\n");
    sb.append("    targetProcessingSeconds: ").append(toIndentedString(targetProcessingSeconds)).append("\n");
    sb.append("    zeroReplicaSleepSeconds: ").append(toIndentedString(zeroReplicaSleepSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

